name: package-firmware   #cpt-firmware-cn10k_<version>_arm64

on:
  push:
  schedule:
    - cron: "0 0 * * 1"
  pull_request:

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

jobs:
  ubuntu-cn10k-package:
    name: ubuntu-cn10k-arm64
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Extract version details
        id: version
        run: |
          mkdir -p "${PWD}/artifacts"
          git tag --points-at HEAD > /tmp/tags
          [ -s /tmp/tags ] && PKG_POSTFIX= || PKG_POSTFIX=-devel
          echo "PKG_VERSION_NAME=`cat VERSION`" >> "${PWD}/artifacts/env"
          echo "PKG_POSTFIX=${PKG_POSTFIX}" >> "${PWD}/artifacts/env"
      - name: Generate CPT package
        run: |      
            source ${PWD}/artifacts/env
            sudo apt-get update -q -y
            sudo apt-get install -y lsb-release
            DISTRO=ubuntu-`lsb_release -rs`
            echo "DISTRO=${DISTRO}" >> ${PWD}/artifacts/env                                                                                  
            mkdir -p "${PWD}/install/lib/firmware/mrvl/"
            cp -r ${PWD}/files/ ${PWD}/install/lib/firmware/mrvl/
            mkdir -p "${PWD}/install/DEBIAN"
            cd "${PWD}/install/"
            echo 'Package: cpt-cn10k'$PKG_POSTFIX >> DEBIAN/control                                         
            echo 'Version: '$PKG_VERSION_NAME >> DEBIAN/control                                           
            echo "Maintainer: Jerin Jacob (jerinj@marvell.com)" >> DEBIAN/control
            echo "Architecture: arm64" >> DEBIAN/control
            echo "Description: DPU Accelerator offload for Marvell Octeon 10" >> DEBIAN/control
            cd -
            mv "${PWD}/install" "${PWD}/cpt-cn10k_arm64"
            dpkg --build "${PWD}/cpt-cn10k_arm64"
            cp "${PWD}/cpt-cn10k_arm64.deb" ${PWD}/artifacts/.
      - name: Export version name
        id: artifacts
        run: |
              source "${PWD}/artifacts/env"
              echo $PKG_VERSION_NAME
              echo "PKG_VERSION_NAME=${PKG_VERSION_NAME}" >> "$GITHUB_OUTPUT"
              echo $DISTRO
              echo "DISTRO=${DISTRO}" >> "$GITHUB_OUTPUT"
              [[ "$PKG_POSTFIX" == "-devel" ]] && TAG=devel || TAG=${PKG_VERSION_NAME}
              echo "PKG_POSTFIX=${PKG_POSTFIX}" >> "$GITHUB_OUTPUT"
              echo "TAG=${TAG}" >> "$GITHUB_OUTPUT"
      - name: Delete existing release
        if: ${{ github.event_name == 'push' }}
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
            gh release delete cpt-${{ steps.artifacts.outputs.PKG_VERSION_NAME }}-${{ steps.artifacts.outputs.DISTRO }}-${{ steps.artifacts.outputs.TAG }} --cleanup-tag -y
      - name: Release NGINX cnxk package
        uses: softprops/action-gh-release@v2.0.4
        if: ${{ github.event_name == 'push' }}
        with:
            tag_name: cpt-${{ steps.artifacts.outputs.PKG_VERSION_NAME }}-${{ steps.artifacts.outputs.DISTRO }}-${{ steps.artifacts.outputs.TAG }}
            files: |
                ${{ github.workspace }}/artifacts/cpt-cn10k${{ steps.artifacts.outputs.PKG_POSTFIX }}_${{ steps.artifacts.outputs.PKG_VERSION_NAME }}_arm64.deb
      # Dispatch package update event for packages repo            
                 